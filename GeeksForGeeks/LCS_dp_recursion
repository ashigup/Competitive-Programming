//  https://practice.geeksforgeeks.org/problems/longest-common-subsequence/0
// Longest Common Subsequence --- GeeksforGeeks
// Author -- ashigup -- aka -- Lucifer_07__


#include<iostream>
#include<vector>
#include<algorithm>
#define ll long long int
using namespace std;
ll dp[105][105];
ll common(char str1[],ll n,char str2[],ll m)
{
  if(n==0 || m==0)
    return 0;
  if(dp[n][m]!=-1)
   return dp[n][m];
    
    
 if(str1[0]==str2[0]){
     dp[n][m]=1+common(str1+1,n-1,str2+1,m-1);
     return dp[n][m];
 }
else
{
    dp[n][m]= max( common(str1,n,str2+1,m-1),common(str1+1,n-1,str2,m) );
    return dp[n][m];
}
}

int main()
{
    ios_base::sync_with_stdio(false);
cin.tie(NULL);
    
    ll t;
     ll n,m; 
     
    char str1[102];
    char str2[102];
    cin>>t;
    
    while(t--){
      
      for(int i=0;i<102;i++)
        for(int j=0;j<102;j++)
             dp[i][j]=-1;
      
      
    cin>>n>>m;
     
     cin>>str1;
     cin>>str2;
    ll best= common(str1,n,str2,m);
    cout<<best<<"\n";
    }
    return 0;
}
