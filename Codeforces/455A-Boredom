//https://codeforces.com/problemset/problem/455/A
//Codeforces Problem : 455A Boredom 
//author -- ashigup -- aka -- Lucifer_07__

*********************************************************************************************************************************************
First of all an array representing the number of occurence of a particular digit is made and then algorithm for 
fibonacci series having time complexiety O(n) following bottom up approach is used for the solution.
*********************************************************************************************************************************************



#include<bits/stdc++.h>
#define ll long long int
using namespace std;
ll maxn=0;
int main()
{ ll n;
  cin>>n;
  
ll sum=0;
  vector<ll> a(100001,0);
 ll x;                
  for(ll i=0;i<n;i++)
    {  
        cin>>x;
        maxn=max(maxn,x);
        a[x]++;
    }
   ll c=a[1];
    ll  b=0;
    for(ll i=2;i<=maxn;i++)
    {
        sum=max(c,b+a[i]*i);
        b=c;
        c=sum;
    }
    
    
  
 cout<<sum;
 
   return 0;
   
}
