//https://codingcompetitions.withgoogle.com/kickstart/round/000000000019ff43/00000000003381cb
//Round C
// KIckstart 2020
//Perfect Subarray
//Author --ashigup --aka-- Lucifer07
//Partial Solution


#include<bits/stdc++.h>
#define ll long long int
using namespace std;

int main()
{ios_base::sync_with_stdio(false);
cin.tie(NULL);

    
   map<ll,int> mp;
    for(ll i=0;i<10004;i++)
    {
        mp[i*i]=1;
    }
    
    
	ll t;
	cin>>t;
	ll m=0;
	while(t--)
	{ m++;
	    ll n;
	    cin>>n;
	    ll a[n];
	    ll ps[n];
	    ll p=0;
	    ll count=0;
	    ll k;
	    ll r;
	    for(ll i=0;i<n;i++)
	    {
	        cin>>a[i];
	        ps[i]=a[i]+p;
	        p=ps[i];
	       
	        
	    }
	    
	    // for(ll i=0;i<n;i++)
	      // cout<<ps[i]<<"  ";
	    
     for(ll i=0;i<n-1;i++)
     {
         for(ll j=i+1;j<n;j++)
         {  
             k=ps[j]-ps[i];
            // cout<<k<<"  ";
    //        cout<<k<<" "<<mp[k]<<"\n";
             if(mp[k]==1)
               count++;
             
             
              }
             
         }
         
    //     cout<<count<<"\n";
   for(ll i=0;i<n;i++)
    {     k=ps[i];
 //   cout<<k<<"  "<<mp[k]<<" \n ";
        if(mp[k]==1)
          count++;
    }
 
	 cout<<"Case #"<<m<<": " << count<<"\n";     
	      
	    
	}
	return 0;
}
