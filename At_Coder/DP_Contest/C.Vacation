//https://atcoder.jp/contests/dp/tasks/dp_c
// atcoder.jp  DP contest 
//Problem C.vacation
//Author ashigup  -- aka -- Lucifer_07_



#include<bits/stdc++.h>
#define ll long long int
using namespace std;
ll cost[100005][3];
ll dp[100005][3];
ll n,maxc=0;
ll fun(ll i, ll j)
{
    if(i==n)
     return 0;
    if(dp[i][j]!=-1)
       return dp[i][j];
    else
    {
        return dp[i][j]=max(fun(i+1,(j+1)%3),fun(i+1,(j+2)%3) )+ cost[i][j];
    }
    
    
}


int main()
{
    
    memset(dp,-1,sizeof(dp));
    cin>>n;
    
    for(ll i=0;i<n;i++)    
      cin>>cost[i][0]>>cost[i][1]>>cost[i][2];
      
    maxc=max(fun(0,0),fun(0,1));
    
    maxc= max(fun(0,2),maxc); 
    
    cout<<maxc<<"\n"; 
    
    return 0;
}
