//https://codingcompetitions.withgoogle.com/codejam/round/000000000019fd27/0000000000209aa0
//CodeJAM 2020
//Problem : Indicium (7pts, 25pts)
// author -- ashigup -- aka -- Lucifer_07__



#include<bits/stdc++.h>
using namespace std;
#define ll   int
#define una -1
ll matrix[55][55];
ll n0, k0;


bool
uic (int matrix[55][55], int col, int num)
{
  for (int row = 0; row < n0; row++)
    if (matrix[row][col] == num)
      return true;
  return false;
}

bool
ful (int matrix[55][55], int &row, int &col)
{
  for (row = 0; row < n0; row++)
    for (col = 0; col < n0; col++)
      if (matrix[row][col] == una)
	return true;
  return false;
}

bool
uir (int matrix[55][55], int row, int num)
{
  for (int col = 0; col < n0; col++)
    if (matrix[row][col] == num)
      return true;
  return false;
}


bool
isf (int matrix[][55], int row, int col, int num)
{
  return !uir (matrix, row, num) &&
    !uic (matrix, col, num) && matrix[row][col] == una;
}

bool
ist (int matrix[][55])
{
  ll c0 = 0;
  for (int i = 0; i < n0; i++)
    c0 += matrix[i][i];
  if (c0 == k0)
    return true;
  return false;
}

bool
SS (int matrix[][55])
{
  int row, col;

  if (!ful (matrix, row, col))
    {
      return ist (matrix);
    }
  for (int num = 1; num <= n0; num++)
    {
      if (isf (matrix, row, col, num))
	{
	  matrix[row][col] = num;
	  if (SS (matrix))
	    return true;
	  matrix[row][col] = una;
	}
    }
  return false;
}


int
main ()
{
  ios_base::sync_with_stdio (false);
  cin.tie (NULL);
  cout.tie (NULL);
  ll a, b, c, d, e, f, x, n, m, p, k, t, q;
  t = 1;
  cin >> t;
  string s1, s2, s3;

  for (ll tc = 1; tc <= t; tc++)
    {
      cin >> n >> k;
      k0 = k;
      n0 = n;

      for (int i = 0; i < n; i++)
	for (int j = 0; j < n; j++)
	  matrix[i][j] = una;




      cout << "Case #" << tc << ": ";
      if (SS (matrix) == false)
	{
	  cout << "IMPOSSIBLE\n";
	  continue;
	}
      cout << "POSSIBLE\n";
      for (int i = 0; i < n; i++)
	{
	  for (int j = 0; j < n; j++)
	    {
	      cout << matrix[i][j] << " ";
	    }
	  cout << "\n";
	}

    }
  return 0;
}
